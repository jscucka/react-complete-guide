{"ast":null,"code":"var _jsxFileName = \"/Users/janscucka/Projects/01-starting-setup 2/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = year => {\n    console.log(year);\n    setFilteredYear(year);\n  };\n\n  const filteredExpenses = props.data.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        onChangeFilter: filterChangeHandler,\n        selectedYear: filteredYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), filteredExpenses === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Expenses found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 44\n      }, this), filteredExpenses.lenght === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Expenses found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 50\n      }, this) : filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: expense.title,\n        amount: expense.amount,\n        date: expense.date\n      }, expense.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/janscucka/Projects/01-starting-setup 2/src/components/Expenses/Expenses.js"],"names":["useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","year","console","log","filteredExpenses","data","filter","expense","date","getFullYear","toString","lenght","map","title","amount","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAIC,IAAD,IAAU;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAF,IAAAA,eAAe,CAACE,IAAD,CAAf;AACH,GAHD;;AAIA,QAAMG,gBAAgB,GAAGP,KAAK,CAACQ,IAAN,CAAWC,MAAX,CAAkBC,OAAO,IAAI;AAClD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CZ,YAAjD;AACH,GAFwB,CAAzB;AAKA,sBACI;AAAA,2BAEI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,cAAc,EAAEE,mBAAhC;AAAqD,QAAA,YAAY,EAAEF;AAAnE;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKM,gBAAgB,KAAK,CAArB,iBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAF/B,EAGKA,gBAAgB,CAACO,MAAjB,KAA4B,CAA5B,gBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAhC,GAA6DP,gBAAgB,CAACQ,GAAjB,CAAqBL,OAAO,iBACtF,QAAC,WAAD;AAA8B,QAAA,KAAK,EAAEA,OAAO,CAACM,KAA7C;AAAoD,QAAA,MAAM,EAAEN,OAAO,CAACO,MAApE;AAA4E,QAAA,IAAI,EAAEP,OAAO,CAACC;AAA1F,SAAkBD,OAAO,CAACQ,EAA1B;AAAA;AAAA;AAAA;AAAA,cAD0D,CAHlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAzBD;;GAAMnB,Q;;KAAAA,Q;AA0BN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState(\"2020\");\n    const filterChangeHandler = (year) => {\n        console.log(year);\n        setFilteredYear(year);\n    }\n    const filteredExpenses = props.data.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear\n    }\n\n    )\n    return (\n        <div>\n\n            <Card className=\"expenses\">\n                <ExpensesFilter onChangeFilter={filterChangeHandler} selectedYear={filteredYear} />\n                {filteredExpenses === 0 && <p>No Expenses found!</p> }\n                {filteredExpenses.lenght === 0 ? <p>No Expenses found!</p> : (filteredExpenses.map(expense =>\n                    <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />\n                ))}\n                \n\n            </Card>\n        </div>\n    );\n}\nexport default Expenses;"]},"metadata":{},"sourceType":"module"}